version: '3.8'

services:
  postgres:
    image: ${USE_LOCAL_POSTGRES_IMAGE:-alpespartners-postgres:latest}
    container_name: postgres
    restart: unless-stopped
    ports:
      - '54320:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 'admin10100101.'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./pulsar-manager/sql/alpespartner_tables.sql:/docker-entrypoint-initdb.d/alpespartner_tables.sql:ro
      - ./pulsar-manager/sql/pulsar_manager_tables.sql:/docker-entrypoint-initdb.d/pulsar_manager_tables.sql:ro
    networks:
      - sidecar

  zookeeper:
    image: apachepulsar/pulsar:latest
    container_name: zookeeper
    restart: unless-stopped
    command: |
      bash -lc "bin/apply-config-from-env.py conf/zookeeper.conf && bin/generate-zookeeper-config.sh conf/zookeeper.conf && exec bin/pulsar zookeeper"
    networks:
      - pulsar

  pulsar-init:
    image: apachepulsar/pulsar:latest
    container_name: pulsar-init
    restart: 'no'
    command: |
      bash -lc "bin/pulsar initialize-cluster-metadata --cluster cluster-a --zookeeper zookeeper:2181 --configuration-store zookeeper:2181 --web-service-url http://broker:8080 --broker-service-url pulsar://broker:6650"
    depends_on:
      - zookeeper
    networks:
      - pulsar

  bookie:
    image: apachepulsar/pulsar:latest
    container_name: bookie
    restart: unless-stopped
    command: |
      bash -lc "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"
    depends_on:
      - zookeeper
      - pulsar-init
    networks:
      - pulsar

  broker:
    image: apachepulsar/pulsar:latest
    container_name: broker
    restart: unless-stopped
    command: |
      bash -lc "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"
    depends_on:
      - zookeeper
      - bookie
    ports:
      - '6650:6650'
      - '8080:8080'
    networks:
      - pulsar

  pulsar-manager:
    image: apachepulsar/pulsar-manager:latest
    container_name: pulsar-manager
    restart: unless-stopped
    depends_on:
      - postgres
      - broker
    ports:
      - '9527:9527'
      - '7750:7750'
    volumes:
      - ./pulsar-manager/resources/application.properties:/pulsar-manager/pulsar-manager/application.properties:ro
    networks:
      - sidecar
      - pulsar

  alpespartner:
    build:
      context: .
      dockerfile: alpespartners.Dockerfile
    container_name: alpespartner
    restart: unless-stopped
    entrypoint: ["/bin/bash", "/src/entrypoint.sh"]
    depends_on:
      - broker
      - postgres
    ports:
      - '5000:5000'
    environment:
      ALPESPARTNERS_ADDRESS: 'alpespartner'
      PULSAR_ADDRESS: 'broker'
      BROKER_HOST: 'broker'
      DB_URL: 'postgresql+psycopg2://admin:admin10100101.@postgres:5432/alpespartner'
      DATABASE_URL: 'postgresql+psycopg2://admin:admin10100101.@postgres:5432/alpespartner'
      PULSAR_BROKER_URL: 'pulsar://broker:6650'
      TOPIC_COMANDOS_CAMPANIAS: 'persistent://public/default/comandos.campanias'
      TOPIC_EVENTOS_CAMPANIAS: 'persistent://public/default/eventos.campanias'
      # Pulsar publisher retry tuning to tolerate broker startup
      PULSAR_CONNECT_ATTEMPTS: '30'
      PULSAR_CONNECT_DELAY: '1'
      PULSAR_PRODUCER_ATTEMPTS: '10'
      PULSAR_PRODUCER_DELAY: '1'
      PULSAR_SEND_ATTEMPTS: '5'
      PULSAR_SEND_DELAY: '0.5'
      PYTHONPATH: '/src'
      PYTHONDONTWRITEBYTECODE: '1'
      PYTHONUNBUFFERED: '1'
    networks:
      - sidecar
      - pulsar

  campanias:
    build:
      context: .
      dockerfile: alpespartners.Dockerfile
    container_name: campanias
    restart: unless-stopped
    depends_on:
      - broker
      - postgres
    environment:
      SERVICE_MODULE: 'campanias'
      PULSAR_BROKER_URL: 'pulsar://broker:6650'
      DB_URL: 'postgresql+psycopg2://admin:admin10100101.@postgres:5432/alpespartner'
      TOPIC_EVENTOS_CAMPANIAS: 'persistent://public/default/eventos.campanias'
      PYTHONUNBUFFERED: '1'
      PYTHONPATH: '/app/src'
      # Pulsar publisher retry tuning
      PULSAR_CONNECT_ATTEMPTS: '30'
      PULSAR_CONNECT_DELAY: '1'
      PULSAR_PRODUCER_ATTEMPTS: '10'
      PULSAR_PRODUCER_DELAY: '1'
      PULSAR_SEND_ATTEMPTS: '5'
      PULSAR_SEND_DELAY: '0.5'
    networks:
      - sidecar
      - pulsar

  cliente:
    build:
      context: .
      dockerfile: alpespartners.Dockerfile
    container_name: cliente
    restart: unless-stopped
    depends_on:
      - broker
      - postgres
    environment:
      SERVICE_MODULE: 'cliente'
      PULSAR_BROKER_URL: 'pulsar://broker:6650'
      DB_URL: 'postgresql+psycopg2://admin:admin10100101.@postgres:5432/alpespartner'
      PYTHONUNBUFFERED: '1'
      PYTHONPATH: '/app/src'
      # Pulsar publisher retry tuning
      PULSAR_CONNECT_ATTEMPTS: '30'
      PULSAR_CONNECT_DELAY: '1'
      PULSAR_PRODUCER_ATTEMPTS: '10'
      PULSAR_PRODUCER_DELAY: '1'
      PULSAR_SEND_ATTEMPTS: '5'
      PULSAR_SEND_DELAY: '0.5'
    networks:
      - sidecar
      - pulsar

  pagos:
    build:
      context: .
      dockerfile: alpespartners.Dockerfile
    container_name: pagos
    restart: unless-stopped
    depends_on:
      - broker
      - postgres
    environment:
      SERVICE_MODULE: 'pagos'
      PULSAR_BROKER_URL: 'pulsar://broker:6650'
      DB_URL: 'postgresql+psycopg2://admin:admin10100101.@postgres:5432/alpespartner'
      PYTHONUNBUFFERED: '1'
      PYTHONPATH: '/app/src'
      # Pulsar publisher retry tuning
      PULSAR_CONNECT_ATTEMPTS: '30'
      PULSAR_CONNECT_DELAY: '1'
      PULSAR_PRODUCER_ATTEMPTS: '10'
      PULSAR_PRODUCER_DELAY: '1'
      PULSAR_SEND_ATTEMPTS: '5'
      PULSAR_SEND_DELAY: '0.5'
    networks:
      - sidecar
      - pulsar

  newman:
    image: postman/newman:alpine
    container_name: newman
    profiles: ["e2e"]
    entrypoint: ["/bin/sh", "-c"]
    command: ["sleep 3600"]
    volumes:
      - ./:/etc/newman
    networks:
      - sidecar

volumes:
  postgres_data:

networks:
  pulsar:
    driver: bridge
  sidecar:
    driver: bridge